Instructions
In this exercise you'll be writing code to help a sign company create custom messages for their signs.

Implement the function buildSign(occasion, name) that accepts a string as the occasion parameter and a string holding someone's name as the name parameter. The two parameters will be embedded into a template string to output the message on the sign.

buildSign('Birthday', 'Rob');
// => "Happy Birthday Rob!"

Stuck? Reveal Hints
Opens in a modal
Implement the function buildBirthdaySign(age) that accepts an age and based on the age will determine part of the message on the sign. If the age is 50 or older, the sign will refer user as mature, else it will refer them as young. The exact expected output is shown below:

buildBirthdaySign(50);
// => "Happy Birthday! What a mature fellow you are."

buildBirthdaySign(45);
// => "Happy Birthday! What a young fellow you are."

Stuck? Reveal Hints
Opens in a modal
Implement the function graduationFor(name, year) which takes a name as a string parameter and a year as a number parameter and uses string interpolation to create a phrase for a sign that uses a newline to separate the two lines of the message.

graduationFor('Hannah', 2022);
// => "Congratulations Hannah!\nClass of 2022"

Stuck? Reveal Hints
Opens in a modal
How to debug
When a test fails, a message is displayed describing what went wrong and for which input. You can also use the fact that any console output will be shown too. You can write to the console using:

console.log('Debug message');